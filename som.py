# -*- coding: utf-8 -*-
"""SOM.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zdgVXjByiqr6IiS2DvClnry3rJWxQjmv
"""

!pip install minisom

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from minisom import MiniSom

data = pd.read_csv('/content/Credit_Card_Applications[1].csv')
data

data.shape
data.info()

X = data.iloc[:, 1:14].values
y = data.iloc[:, -1].values
pd.DataFrame(X)

from sklearn.preprocessing import MinMaxScaler
sc = MinMaxScaler(feature_range = (0, 1))
X = sc.fit_transform(X)
pd.DataFrame(X)

som_grid_rows = 10
som_grid_columns = 10
iterations = 20000
sigma = 1
learning_rate = 0.5

som = MiniSom(x = som_grid_rows, y = som_grid_columns, input_len=13, sigma=sigma, learning_rate=learning_rate)
som.random_weights_init(X)
som.train_random(X, iterations)

wts = som.get_weights()
wts.shape
som.distance_map()

from pylab import plot, axis, show, pcolor, colorbar, bone
bone()
pcolor(som.distance_map().T)
colorbar()
show()

bone()
pcolor(som.distance_map().T)
colorbar()
markers = ['o', 's']
colors = ['r', 'g']

for i, x in enumerate(X):

    w = som.winner(x)

    plot(w[0] + 0.5,

         w[1] + 0.5,

         markers[y[i]],

         markeredgecolor = colors[y[i]],

         markerfacecolor = 'None',

         markersize = 10,

         markeredgewidth = 2)

show()

mappings = som.win_map(data.iloc[:, :13].values)
mappings

mappings.keys()
len(mappings.keys())
mappings[(9,8)]

frauds = np.concatenate((np.array(mappings[(0,9)]).reshape(-1,1), np.array(mappings[(8,9)]).reshape(-1,1)), axis = 0)
frauds =frauds = frauds.reshape(-1, 13)
frauds1 = sc.inverse_transform(frauds)

pd.DataFrame(frauds1)
#making push request in github
#adding new changes